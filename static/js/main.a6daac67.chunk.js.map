{"version":3,"sources":["logo.svg","Components/style.js","Components/Card.js","Components/consts.js","Components/actions.js","Components/container.js","Components/index.js","App.js","utils/fetchUtils.js","Components/api.js","Components/sagas.js","MainSagas.js","Components/reducers.js","store/ConfigureStore.js","MainReducer.js","index.js"],"names":["Wrapper","styled","div","CardContainer","CardMovie","cardData","this","props","map","item","Card","style","maxWidth","to","url","color","CardActionArea","CardMedia","image","image_url","title","height","paddingTop","marginTop","CardContent","Typography","gutterBottom","variant","component","Component","ANIME_REQUEST","ANIME_SUCCESS","ANIME_FAILURE","requestAnime","payload","type","connect","AnimeReducer","data","isFetching","isFetched","dispatch","bindActionCreators","AnimeActions","container","componentDidMount","searchText","state","onChangeSearch","debounce","event","target","value","setState","leading","trailing","loopWithSlice","start","end","slicedPosts","slice","dataUpdate","handleShowMorePosts","next","postsPerPage","LoadMore","prevProps","prevState","SearchButton","IconButton","loader","newShowMore","length","autoComplete","TextField","id","label","InputProps","endAdornment","onChange","e","width","Button","marginBottom","onClick","App","className","NETWORK_OFFLINE","createError","response","json","status","statusText","createHeader","headers","nextHeaders","successHandler","then","Promise","resolve","catch","errorHandler","reject","options","etagCacheKey","navigator","onLine","body","updatedOptions","fileUpload","copyBody","formData","FormData","Object","keys","forEach","key","append","JSON","stringify","fetch","fetchWrapper","getAnime","method","FetchAnime","main","action","call","results","put","error","message","takeEvery","fork","FetchAnimeSaga","initialState","isFailure","sagaMiddleware","createSagaMiddleware","configureStore","history","middlewares","routerMiddleware","composeEnhancers","compose","store","createStore","asyncReducers","appReducer","combineReducers","rootReducer","applyMiddleware","run","sagas","runSaga","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6daac67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 1%;\n  top: 5%;\n  overflow: scroll;\n`;\n\nexport const CardContainer = styled.div`\n  margin: 100px;\n`;\n","import { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardContainer } from \"./style\";\nimport { Link } from \"react-router-dom\";\nclass CardMovie extends Component {\n  render() {\n    const { cardData } = this.props;\n\n    return (\n      <CardContainer>\n        <div>\n          {cardData &&\n            cardData.map((item) => {\n              return (\n                <div>\n                  <Card style={{ maxWidth: 400 }}>\n                    <Link to={item.url} style={{ color: \"black\" }}>\n                      <CardActionArea>\n                        <CardMedia\n                          image={item.image_url}\n                          title={item.title}\n                          style={{\n                            height: 0,\n                            paddingTop: \"56%\",\n                            marginTop: \"30\",\n                          }}\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {item.title}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Link>\n                  </Card>\n                  <br />\n                </div>\n              );\n            })}\n        </div>\n      </CardContainer>\n    );\n  }\n}\n\nexport default CardMovie;\n","export const ANIME_REQUEST = \"ANIME_REQUEST\";\nexport const ANIME_SUCCESS = \"ANIME_SUCCESS\";\nexport const ANIME_FAILURE = \"ANIME_FAILURE\";\n","import { ANIME_REQUEST } from \"./consts\";\n\nexport const requestAnime = (payload) => ({\n  type: ANIME_REQUEST,\n  payload,\n});\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as AnimeActions from \"./actions\";\n\nfunction mapStateToProps({ AnimeReducer }) {\n  return {\n    cardData: AnimeReducer.data,\n    isFetching: AnimeReducer.isFetching,\n    isFetched: AnimeReducer.isFetched,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      ...AnimeActions,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","import React, { Component, Fragment } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Wrapper } from \"./style\";\nimport CardMovie from \"./Card\";\nimport debounce from \"lodash/debounce\";\nimport container from \"./container\";\nimport Loader from \"react-loader-spinner\";\nimport Button from \"@material-ui/core/Button\";\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"Naruto\",\n      LoadMore: false,\n      postsPerPage: 5,\n      data: [],\n      next: 5,\n    };\n  }\n\n  componentDidMount = () => {\n    const { searchText } = this.state;\n    this.props.requestAnime(`q=${searchText}&limit=${16}`);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { postsPerPage } = this.state;\n    if (this.props !== prevProps) {\n      this.setState({ data: [] }, () => {\n        this.loopWithSlice(0, postsPerPage);\n      });\n    }\n  }\n\n  onChangeSearch = debounce(\n    (event) => {\n      const value = event.target.value;\n      if (value !== \"\") {\n        this.setState({ searchText: event.target.value }, () => {\n          this.props.requestAnime(`q=${event.target.value}&limit=${25}`);\n        });\n      } else this.props.requestAnime(`q=\"Naruto\"&limit=${25}`);\n    },\n    1000,\n    { leading: false, trailing: true }\n  );\n\n  loopWithSlice = (start, end) => {\n    const { cardData } = this.props;\n    const { data } = this.state;\n\n    const slicedPosts = cardData.slice(start, end);\n    let dataUpdate = [...data, ...slicedPosts];\n    this.setState({ data: dataUpdate });\n  };\n\n  handleShowMorePosts = () => {\n    const { next, postsPerPage } = this.state;\n    this.loopWithSlice(next, next + postsPerPage);\n    this.setState({ next: next + postsPerPage });\n  };\n\n  render() {\n    const SearchButton = () => (\n      <IconButton>\n        <SearchIcon />\n      </IconButton>\n    );\n    const { isFetching, isFetched, cardData } = this.props;\n    const { data, postsPerPage } = this.state;\n    const loader = isFetching && !isFetched;\n    const newShowMore = data.length < cardData.length - 1;\n    return (\n      <Fragment>\n        <Wrapper>\n          <form autoComplete=\"off\">\n            <TextField\n              id=\"filled-basic\"\n              label=\"Search\"\n              variant=\"filled\"\n              InputProps={{ endAdornment: <SearchButton /> }}\n              onChange={(e) => {\n                this.onChangeSearch(e);\n              }}\n            />\n          </form>\n        </Wrapper>\n\n        {loader ? (\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={60} width={60} />\n        ) : (\n          <CardMovie\n            cardData={data}\n            isFetching={isFetching}\n            isFetched={isFetched}\n          />\n        )}\n        {newShowMore && (\n          <Button\n            style={{ marginBottom: \"10%\" }}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(e) => {\n              this.handleShowMorePosts();\n            }}\n          >\n            Load More\n          </Button>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default container(LandingPage);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./Components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <LandingPage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export const NETWORK_OFFLINE = \"NETWORK_OFFLINE\";\n\nfunction createError(response, json) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    json,\n  };\n}\nexport function networkOffline() {\n  return { type: NETWORK_OFFLINE };\n}\nfunction createHeader(headers) {\n  // fetch current auth headers from storage\n  //const accessToken = Cookies.get(STORAGE_KEY)\n  const nextHeaders = headers || {};\n  nextHeaders[\"Content-Type\"] = \"application/json\";\n  nextHeaders[\"Access-Control-Allow-Origin\"] = \"http://localhost:3000\";\n  nextHeaders[\"Access-Control-Allow-Methods\"] = \"GET, POST, OPTIONS\";\n  return nextHeaders;\n}\nexport function successHandler(response) {\n  if (response.status !== 204) {\n    return response\n      .json()\n      .then((json) => {\n        return Promise.resolve(json);\n      })\n      .catch(() =>\n        Promise.resolve({\n          status: \"ok\",\n          data: null,\n        })\n      );\n  }\n  return Promise.resolve({ status: 204 });\n}\nexport function errorHandler(response) {\n  return response.json().then((json) => {\n    return Promise.reject(createError(response, json));\n  });\n}\nexport function fetchWrapper(url, options = {}, etagCacheKey) {\n  try {\n    const { headers, body } = options;\n    const updatedOptions = {\n      ...options,\n      headers: createHeader(headers),\n    };\n    let fileUpload = false;\n    if (!!body) {\n      fileUpload = !!body.fileUpload;\n    }\n    if (fileUpload) {\n      const copyBody = { ...body };\n      const formData = new FormData();\n      /*** Append all the params from body to formData */\n      Object.keys(copyBody).forEach((key) => {\n        if (key !== \"fileUpload\") {\n          formData.append(key, copyBody[key]);\n        }\n      });\n      //formData.append(\"file\", file);\n      updatedOptions.body = formData;\n      delete updatedOptions.headers[\"Content-Type\"];\n    } else if (!!body) {\n      //if (!isEmpty(body) && !isEmpty(copyBody)) {\n      updatedOptions.body = JSON.stringify(body);\n    }\n    return fetch(url, updatedOptions).then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return successHandler(response);\n      }\n      return errorHandler(response);\n    });\n  } catch (e) {\n    return {};\n  }\n}\n\nexport default function (url, options, etagCacheKey) {\n  if (navigator && !navigator.onLine) {\n    return Promise.reject(\n      createError({\n        statusText: NETWORK_OFFLINE,\n        status: \"error\",\n      })\n    );\n  }\n  return fetchWrapper(url, options, etagCacheKey);\n}\n","import fetch from \"../utils/fetchUtils\";\n\nexport const getAnime = (payload) => {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/https://api.jikan.moe/v3/search/anime?${payload}`,\n    {\n      method: \"GET\",\n    }\n  );\n};\n\n// https://cors-anywhere.herokuapp.com/ --> added just to avoid CORS blockage of HTTPS on localhost\n","import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { ANIME_REQUEST, ANIME_SUCCESS, ANIME_FAILURE } from \"./consts\";\nimport { getAnime } from \"./api\";\n\nfunction* FetchAnime(action) {\n  try {\n    const response = yield call(getAnime, action.payload);\n    const data = response.results;\n\n    yield put({\n      type: ANIME_SUCCESS,\n      payload: { data },\n    });\n  } catch (e) {\n    yield put({\n      type: ANIME_FAILURE,\n      payload: {\n        error: e.message || \"Failure in fetching the hub closing stock data.\",\n      },\n    });\n  }\n}\n\nexport default function* main() {\n  yield takeEvery(ANIME_REQUEST, FetchAnime);\n}\n","import { fork } from \"redux-saga/effects\";\nimport FetchAnimeSaga from \"./Components/sagas\";\n\nexport default function* main() {\n  yield fork(FetchAnimeSaga);\n}\n","import { ANIME_REQUEST, ANIME_SUCCESS, ANIME_FAILURE } from \"./consts\";\n\nconst initialState = {\n  data: [],\n  isFetching: false,\n  isFetched: false,\n  isFailure: false,\n};\n\nexport default function AnimeReducer(state = initialState, action) {\n  switch (action.type) {\n    case ANIME_REQUEST: {\n      return {\n        ...state,\n        isFetching: true,\n        isFetched: false,\n        isFailure: false,\n      };\n    }\n    case ANIME_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload.data,\n        isFetching: false,\n        isFetched: true,\n        isFailure: false,\n      };\n    }\n    case ANIME_FAILURE: {\n      return {\n        ...state,\n        isFetching: false,\n        isFetched: true,\n        isFailure: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { routerMiddleware } from \"react-router-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"../MainSagas\";\nimport { fromJS } from \"immutable\";\nimport rootReducer from \"../MainReducer\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction configureStore(initialState, history) {\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  if (process.env.NODE_ENV !== \"production\") {\n    middlewares.push(reduxImmutableStateInvariant());\n  }\n\n  // add support for Redux dev tools if not production build and devtools available\n  const composeEnhancers =\n    process.env.NODE_ENV !== \"production\" &&\n    typeof window === \"object\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // shouldHotReload: false\n          deserializeState: (state) =>\n            Object.keys(state).reduce((previous, current) => {\n              previous[current] = fromJS(state[current]);\n              return previous;\n            }, {}),\n        })\n      : compose;\n\n  const store = createStore(\n    rootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"../MainReducer\", () => {\n      const nextRootReducer = require(\"../MainReducer\");\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  sagaMiddleware.run(sagas);\n  store.runSaga = sagaMiddleware.run;\n  store.asyncReducers = {};\n  return store;\n}\n\nexport default configureStore;\n","import { combineReducers } from \"redux\";\nimport AnimeReducer from \"./Components/reducers\";\n\nexport default function createReducer(asyncReducers) {\n  const appReducer = combineReducers({\n    AnimeReducer,\n    ...asyncReducers,\n  });\n  return (state, action) => appReducer(state, action);\n}\n","// import { AppContainer } from \"react-hot-loader\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./store/ConfigureStore\";\nimport \"babel-polyfill\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"react-router-redux\";\n// import ScrollToTop from \"utils/ScrollToTop\";\n\nexport const history = createBrowserHistory();\nexport const store = configureStore({}, history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}